@model PiArt.Models.GalleryViewModel

@{
    ViewBag.Title = "Edit your Informations";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>
<script src=@Url.Content("~/Scripts/jquery-1.10.2.js")></script>

<script>
    var map;
    function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: 36.862499, lng: 10.195556 },
            zoom: 8,
            mapTypeId: google.maps.MapTypeId.TERRAIN
        });


    }

    $(document).ready(function () {
        $("#k").click(function () {
            var map;

                map = new google.maps.Map(document.getElementById('map'), {
                    center: { lat: 36.862499, lng: 10.195556 },
                    zoom: 8,
                    mapTypeId: google.maps.MapTypeId.TERRAIN
                });



            var geocoder;
        geocoder = new google.maps.Geocoder();
            var address = document.getElementById('Address').value;

            geocoder.geocode( { 'address': address}, function(results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    map.setCenter(results[0].geometry.location);
                    var marker = new google.maps.Marker({
                        map: map,
                        position: results[0].geometry.location,

                    });
                }
             //   alert(marker.getPosition().lat());

                    document.getElementById('lat').value = marker.getPosition().lat();
                    document.getElementById('lng').value = marker.getPosition().lng();
               //     alert(marker.getPosition().lat());

            });
        })

    })
</script>
<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD0lGurDaolJ4wzpaDkKNjWst84beoHRyw&callback=initMap"
        type="text/javascript">
</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
   
    <div class="form-horizontal">
        <div id="map" style="height: 600px; width: 900px ; margin-left: 250px">
          </div>

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2 label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control ", @style = "width:500px" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>
        <div style="margin-left:650px ">
            <input type="button" value="Locate" id="k" class="button" style="width:100px"/ >
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2 label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control ", @style="width:500px" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

       

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2 label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" , @style = "width:500px" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.lat, htmlAttributes: new { @class = "control-label col-md-2 label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.lat, new { htmlAttributes = new { @class = "form-control" , @style = "width:500px" } })
                @Html.ValidationMessageFor(model => model.lat, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.lng, htmlAttributes: new { @class = "control-label col-md-2 label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.lng, new { htmlAttributes = new { @class = "form-control", @style = "width:500px" } })
                @Html.ValidationMessageFor(model => model.lng, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2 label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control", @style = "width:500px" } })
                @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
            </div>
        </div>
            </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="button" />
               
            </div>
        </div>
   
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

